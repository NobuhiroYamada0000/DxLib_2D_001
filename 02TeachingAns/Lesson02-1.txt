さて、絵を動かして見ましょう。
とりあえず絵が左から右へ動くプログラムを考えます。

ここでふと考えてみましょう、どうやったら絵が動いているように見えるか！

答えは簡単、アニメの手法を拝借させていただきましょう。
アニメの絵は個々がすべて違う紙(セル)に描かれた独立した絵です。
でも人はそれを短い間隔で次々と絵をすり替えられると、あたかもその絵が動いているように見えます。
実はゲームでも同じ様な手法が使われています。早速やってみましょう。

最初に一番左上に絵を表示します。
次に少し右にずれたところに絵を表示します。
次はそこからさらに右にずれたところに絵を表示します。
要はこれをずっと繰り返せば良いわけです。

絵と絵を表示する間隔を決めなければ一瞬ですべての絵が表示されてしまい、動いているように見えません。
とりあえず一枚絵を表示するごとに２０分の１秒待つことにしましょう。



どうでしょう。なんとか動いているように見えるかと思います。
ここで時間を待つために使われている関数 WaitTimer は、一つの整数型の値を引数に取る関数で
処理を止める時間をミリ秒(1000分の1秒)単位で指定することが出来ます。
プログラムで 50 ミリ秒待つようにセットしてあるのは２０分の１秒が
 1000 / 20 = 50 、つまり５０ミリ秒のことだからです。

さて、このプログラムは繰り返し同じようなことをしています。
繰り返し処理をする時に便利な命令がC++にはあったと思います。

そう、for文ですね。
ではこの大量に並んだLoadGraphScreen 関数とWaitTimer 関数をfor文でまとめてみましょう！
