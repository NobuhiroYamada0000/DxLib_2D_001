#include "DxLib.h"
簡単に言うとＤＸライブラリの関数達を使えるようにするための記述です。これがないとＤＸライブラリが使えません。
つまりＤＸライブラリを使うプログラムでは必ずこの記述が必要になりますので覚えておいてください。

次に
int WINAPI WinMain( HINSTANCE hInstance, HINSTANCE hPrevInstance,
			 LPSTR lpCmdLine, int nCmdShow )
{
です。
『WinMain』という記述を見てぴんと来た方もいるかと思いますが、これは普通のＣ言語プログラムで
言うところの main 関数です。
Windows で動作するソフトでは main 関数の代わりに WinMain 関数を使います。
よってこれがないとプログラムが動きません。

WINAPI だの HINSTANCE だのと、ゴテゴテ付いていますが、ＤＸライブラリを使う以上これらの意味を
知る必要はありませんし、WinMain に引っ付いてくるこれらの引数を使うこともありません。
ただ WinMain の定義はこれに固定なので記述しなければならないのです。
(新たにソフトを作る際はこの記述をコピー＆ペーストすればＯＫです)
とにかく Windows のソフトはこの関数からすべてが始まると言うことだけを覚えておいてください。

では WinMain 関数の中に入ります。
次に登場するのが
// ＤＸライブラリ初期化
if( DxLib_Init() == -1 ) return -1 ;
です。

『ＤＸライブラリ初期化』という記述の通りこれはＤＸライブラリを初期化しています。
つまり使うための準備をするのです。
準備をする関数はこの DxLib_Init で、引数はありません。
リファレンスを読めば分かりますがこの関数は準備に失敗すると -1 を戻り値として返してきます。
ここで DxLib_Init 関数の戻り値が -1 の場合 return -1 ; で関数 WinMain から出る記述をしています。
WinMain 関数から出るということはすなわちソフトの終了を意味します。
なぜ戻り値が -1 だった場合ソフトを終了するのか、いわずもがなですがＤＸライブラリを使ったソフトで
ＤＸライブラリの準備が失敗したのですからもう終了するしかないわけです。
この関数で -1 以外の値が返ってきたら晴れてＤＸライブラリを使えるわけです。

次に今回の本命
// 画面に絵を表示
の登場です。
が、今はコメントだけで実際のプログラムは記述されていませんのでキーボードで実際に入力してみてください。
ＤＸライブラリで絵を表示するための関数は
LoadGraphScreen( 0 , 0 , "Player.bmp" , FALSE );
です。

この LoadGraphScreen という関数はリファレンスを見ていただければ分かると思いますが、１番目に
表示する画像の左上の頂点に対応する画面上のＸ座標の値を、２番目に表示する画像の左上の頂点に対応
する画面上のＹ座標の値を引数としてとります。
ものは試しで、この１番目の引数 0 をとりあえず ３００ にしてみます。
すると

次に２番目の 0 だけ １００ にしてみます。
すると

お分かりいただけたでしょうか？
１番目の ０ の値を増やせば増やすほど画像は右にずれていき、２番目の ０ の値を増やせば
増やすほど画像は下にずれていきます。
これだけ分かれば十分だと思います。
ちなみに、画面の大きさは横６４０・縦が４８０なので、１番目の ０ を ６４０ 以上にするか、
２番目の ０ を ４８０ 以上にすると画像は見えなくなります。

次に３番目の引数は表示する画像ファイルのファイル名を入れます。
Ｃ言語の規則通り文字列はダブルクォーテーション(")でくくる必要があるので注意して下さい。

４番目の引数は透過色の有無を決めるフラグ…つまりまだ気にしなくて良いです。
どうしても知りたい方はリファレンスをみてください。答えは載っています。

さて本命の後です。
// キーの入力待ち
WaitKey() ;
この WaitKey 関数は、関数名の通りキーが押されるまで待ちます、とにかく待ちます、
押されるまで半永久的に待ちます。ただそれだけの関数です。
何かのキーが押されれば関数から返ってきます。

お次は
// ＤＸライブラリ使用の終了
DxLib_End() ;
です。
この関数DxLib_End はコメントの通りＤＸライブラリの使用を終了するときに使います。
この関数を呼ばないでソフトを終了させると、場合によってはPCがフリーズします。
それほど重要な関数ですので、ソフトを終了させる際は必ずその前に DxLib_End 関数を使ってください。
中で何が行われているかは特に気にする必要はありません、せっせと後始末をしているのです。

そして最後に
// ソフトの終了
return 0 ;
}
としてソフトを終了しています。ついでに『}』も付けて WinMain 関数をここで閉じています。
先ほども述べたように WinMain 関数が return で何の値を返しても特に問題はありません。
ただ定義が int 型の数値を返す関数となっているので仕方なく 0 を return をしているのです。

さて、これで画面に絵を表示させることができるようになりました。
僕が新卒で会社に入ってから先輩に言われた言葉の中で
「絵が表示できて、（キーやボタンの）入力が取れて、音が鳴らせれば、もうゲーム作れるでしょ！」
って言われて、確かにその通りだと納得して今でも強烈に覚えているんですが、
さて、これで皆さん絵が表示できるようになりました。

次回はさっそく入力がとれるように…といきたいところですが、まずは絵を動かせるようにしてみたいと思います。
